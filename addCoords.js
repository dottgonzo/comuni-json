"use strict";
var index_1 = require("./index");
var _ = require("lodash");
var async = require("async");
var fs = require("fs");
var geocoder = require("search-google-geocode");
var options = {
    language: 'it'
};
var comuni = index_1.default();
var test = [comuni[0], comuni[3], comuni[4]];
async.eachSeries(comuni, function (iterate, cb) {
    function callbackGeo(error, result) {
        if (error) {
            console.log(error);
        }
        else {
            if (result && result.length && result[0]) {
                _.map(Object.keys(result[0]), function (k) {
                    iterate[k] = result[0][k];
                });
            }
            else {
                console.warn(iterate.nome);
            }
        }
        ;
        cb();
    }
    if (!iterate.latitude) {
        geocoder.geocode(iterate.nome, callbackGeo, options);
    }
    else {
        cb();
    }
}, function (err) {
    if (err) {
    }
    else {
        fs.writeFileSync("./comuni.json", JSON.stringify(test), { encoding: "utf-8" });
    }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZENvb3Jkcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0JBQW1CLFNBQVMsQ0FBQyxDQUFBO0FBQzdCLElBQVksQ0FBQyxXQUFNLFFBQVEsQ0FBQyxDQUFBO0FBQzVCLElBQVksS0FBSyxXQUFNLE9BQU8sQ0FBQyxDQUFBO0FBQy9CLElBQVksRUFBRSxXQUFNLElBQUksQ0FBQyxDQUFBO0FBRXpCLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBRWhELElBQUksT0FBTyxHQUFHO0lBQ1YsUUFBUSxFQUFFLElBQUk7Q0FDakIsQ0FBQztBQUNGLElBQUksTUFBTSxHQUFHLGVBQU0sRUFBRSxDQUFDO0FBQ3RCLElBQUksSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQU81QyxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxVQUFVLE9BQU8sRUFBRSxFQUFFO0lBRzFDLHFCQUFxQixLQUFLLEVBQUUsTUFBTTtRQUM5QixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ1IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN0QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN2QyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDO29CQUNyQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO2dCQUM3QixDQUFDLENBQUMsQ0FBQTtZQUNOLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUM5QixDQUFDO1FBQ0wsQ0FBQztRQUFBLENBQUM7UUFDRixFQUFFLEVBQUUsQ0FBQTtJQUNSLENBQUM7SUFHRCxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBRXBCLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFekQsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ0osRUFBRSxFQUFFLENBQUE7SUFFUixDQUFDO0FBR0wsQ0FBQyxFQUFFLFVBQVUsR0FBRztJQUNaLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFVixDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFFSixFQUFFLENBQUMsYUFBYSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUE7SUFDbEYsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFBIiwiZmlsZSI6ImFkZENvb3Jkcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb211bmkgZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCAqIGFzIF8gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0ICogYXMgYXN5bmMgZnJvbSBcImFzeW5jXCI7XG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIjtcblxubGV0IGdlb2NvZGVyID0gcmVxdWlyZShcInNlYXJjaC1nb29nbGUtZ2VvY29kZVwiKTtcbi8vIHlvdSBjYW4gdXNlIEdvb2dsZSBvcHRpb25zIHRvIG1hbmFnZSByZXN1bHQgZm9ybWF0IFxudmFyIG9wdGlvbnMgPSB7XG4gICAgbGFuZ3VhZ2U6ICdpdCdcbn07XG5sZXQgY29tdW5pID0gQ29tdW5pKCk7XG5sZXQgdGVzdCA9IFtjb211bmlbMF0sIGNvbXVuaVszXSwgY29tdW5pWzRdXVxuXG4vLyB1c2UgY2FsbGJhY2sgdG8gcmV0dXJuIHJlc3VsdCBmcm9tIGdlb2NvZGluZyBwcm9jZXNzXG5cblxuLy8gYWRkcmVzcyBnZW9jb2Rpbmdcbi8vIHJldmVyc2UgZ2VvY29kaW5nXG5hc3luYy5lYWNoU2VyaWVzKGNvbXVuaSwgZnVuY3Rpb24gKGl0ZXJhdGUsIGNiKSB7XG5cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrR2VvKGVycm9yLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0Lmxlbmd0aCAmJiByZXN1bHRbMF0pIHtcbiAgICAgICAgICAgICAgICBfLm1hcChPYmplY3Qua2V5cyhyZXN1bHRbMF0pLCBmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRlW2tdID0gcmVzdWx0WzBdW2tdXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGl0ZXJhdGUubm9tZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTsgLy8gb24gc3VjY2Vzc1xuICAgICAgICBjYigpXG4gICAgfVxuXG5cbiAgICBpZiAoIWl0ZXJhdGUubGF0aXR1ZGUpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZygndG9kbyAnK2Mubm9tZSk7XG4gICAgICAgIGdlb2NvZGVyLmdlb2NvZGUoaXRlcmF0ZS5ub21lLCBjYWxsYmFja0dlbywgb3B0aW9ucyk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICBjYigpXG5cbiAgICB9XG5cblxufSwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmIChlcnIpIHtcblxuICAgIH0gZWxzZSB7XG5cbiAgICAgICAgZnMud3JpdGVGaWxlU3luYyhcIi4vY29tdW5pLmpzb25cIiwgSlNPTi5zdHJpbmdpZnkodGVzdCksIHsgZW5jb2Rpbmc6IFwidXRmLThcIiB9KVxuICAgIH1cbn0pXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
